# -*- coding: utf-8 -*-
"""task15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15fuuGifGn3xB-t1KcZIH9KchIsPUmZCs
"""

!pip install streamlit

import streamlit as st
import joblib
import numpy as np
import pandas as pd

model = joblib.load("best_model.pkl")
st.title("üç∑ Wine Class Prediction App")
st.write("This app predicts the **type of wine** based on its chemical properties using the best-performing ensemble model (Decision Tree / Random Forest / XGBoost).")

st.sidebar.header("Enter Wine Characteristics:")

features = [
    "Alcohol", "Malic_acid", "Ash", "Alcalinity_of_ash", "Magnesium",
    "Total_phenols", "Flavanoids", "Nonflavanoid_phenols",
    "Proanthocyanins", "Color_intensity", "Hue",
    "OD280_OD315", "Proline"
]

input_data = []
for feature in features:
    val = st.sidebar.number_input(
        f"{feature}",
        min_value=0.0,
        step=0.01,
        format="%.2f"
    )
    input_data.append(val)

input_array = np.array(input_data).reshape(1, -1)

if st.button("Predict Wine Class"):
    prediction = model.predict(input_array)[0]

    class_names = {1: "Class 1 ‚Äì Cultivar 1",
                   2: "Class 2 ‚Äì Cultivar 2",
                   3: "Class 3 ‚Äì Cultivar 3"}

    st.success(f"Predicted Wine Type: **{class_names.get(prediction, 'Unknown')}**")

    try:
        probs = model.predict_proba(input_array)[0]
        prob_df = pd.DataFrame({"Class": list(class_names.values()), "Probability": probs})
        st.subheader("Prediction Probabilities")
        st.dataframe(prob_df.style.highlight_max(axis=0))
    except Exception:
        st.info("Probability scores not available for this model.")

st.markdown("---")
st.caption("Developed by Aqsa Najeeb")

